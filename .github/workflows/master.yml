name: master
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  #  Compile and package the Maven project.
  compile:
    name: Compile
    strategy:
      matrix:
        os: [ ubuntu-18.04, macOS-10.15, windows-2019 ]
        java: [ 8, 11, 15 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Maven Compile
        run: mvn -q clean compile

  # Runs unit tests (via surefire-maven-plugin) and integration tests (via failsafe-maven-plugin).
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Java 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Run Tests
        run: mvn -q clean verify --batch-mode --fail-at-end
      - name: Publish Test Report
        if: ${{ always() }}
        uses: scacap/action-surefire-report@v1

  # Collect JaCoCo test coverage and report to Coveralls
  coveralls:
    name: Coveralls
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Java 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Run Tests
        run: mvn -q clean test jacoco:report
      - name: Report to Coveralls
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  # Run SonarCloud static analysis.
  sonar:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Setup Java 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: SonarCloud Scan
        run: mvn -q clean test coveralls:report -Psonar -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Publish the JAR artifacts to GitHub Packages.
  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: [ package, test, sonar ]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Publish Artifact on GitHub Packages
        run: mvn -q clean deploy -DskipTests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
