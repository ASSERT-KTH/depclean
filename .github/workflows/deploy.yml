name: Deploy
on:
  workflow_dispatch:
    inputs:
      previousVersion:
        description: "Previous version"
        required: true
      newVersion:
        description: "New version"
        required: true
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for tags

      - name: Install Java and Maven
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: 21
          cache: "maven"
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Release Maven package
        run: |
          mvn --batch-mode clean deploy -P deploy -Djacoco.skip=true -DskipTests
        env:
          MAVEN_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Create and push tag
        run: |
          git config --global user.email "cesarsotovalero@gmail.com"
          git config --global user.name "$GITHUB_ACTOR"
          git tag -a $TAG -m "Release v$TAG"
          git push origin $TAG
        env:
          TAG: ${{ github.event.inputs.newVersion }}

      - name: Create Release on GitHub
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.newVersion }}
          release_name: Release v${{ github.event.inputs.newVersion }}
          body: |
            Release version ${{ github.event.inputs.newVersion }}

            Changes:
            - Added Java 21 support
            - Updated dependencies
            - Improved bytecode analysis
          draft: true
          prerelease: false

      - name: Update README
        run: |
          sed -i "s/version>${{ github.event.inputs.previousVersion }}<\/version/version>${{ github.event.inputs.newVersion }}<\/version/g" README.md
          git config --global user.email "cesarsotovalero@gmail.com"
          git config --global user.name "$GITHUB_ACTOR"
          git add README.md
          git commit -m "docs: update version to ${{ github.event.inputs.newVersion }} in README"
          git push origin HEAD:master
